@using TaskListApp.Web.Areas.User.Models.ToDoTasksViewModels;
@model ToDoTaskBlankViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/User/Views/Shared/_Layout.cshtml";
}

<h2>Create Task</h2>

<div class="create-task-container">
    @using (Html.BeginForm("Create", "Tasks", FormMethod.Post, new { @enctype = "multipart/form-data" }))
    {

        @Html.HiddenFor(m => m.Id)

        <div class="row">
            <div class="col-md-10">
                <div class="form-group">
                    @Html.LabelFor(m => m.Caption)
                    @Html.TextBoxFor(m => m.Caption, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Caption)
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-10">
                <div class="form-group">
                    @Html.LabelFor(m => m.StartDate)
                    <div class='input-group date' id='start-date-picker' style="width: 280px;">
                        @Html.TextBoxFor(m => m.StartDate, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.StartDate)
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                    
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-10">
                <div class="form-group">
                    @Html.LabelFor(m => m.FinishDate)
                    <div class='input-group date' id='finish-date-picker' style="width: 280px;">
                        @Html.TextBoxFor(m => m.FinishDate, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.FinishDate)
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-10">
                <div class="form-group">
                    @Html.LabelFor(m => m.Duration)
                    @Html.TextBoxFor(m => m.Duration, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Duration)
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-10">
                <div class="form-group">
                    @Html.LabelFor(m => m.DepartmentId)
                    @Html.DropDownListFor(m => m.DepartmentId, new SelectList(Model.DepartmentsList, "Value", "Text"), string.Empty, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.DepartmentId)
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-10">
                <div class="form-group">
                    @Html.LabelFor(m => m.AssigneeId)
                    @Html.DropDownListFor(m => m.AssigneeId, new SelectList(Model.EmployeesList, "Value", "Text"), string.Empty, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.AssigneeId)
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-10">
                <div class="form-group">
                    @Html.LabelFor(m => m.Description)
                    @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Description)
                </div>
            </div>
        </div>

        <button type="submit" class="btn btn-primary">Create</button>
    }
</div>

<script>

    $('#start-date-picker').datetimepicker();
    $('#finish-date-picker').datetimepicker();

    $("select[name='DepartmentId']").change(function () {
        var departmentId = $("#DepartmentId option:selected").val();
        console.log(departmentId);

        $.ajax({
            method: "GET",
            url: "@Url.Action("GetUsersList", "Tasks")",
            data: {
                departmentId: departmentId
            }
        })
        .complete(function (data) {
            $("#AssigneeId").empty();
            $.each(data.responseJSON, function (index, optionData) {
                $("#AssigneeId").append("<option value='" + optionData.Value + "'>" + optionData.Text + "</option>");
            });
        });
    })

</script>